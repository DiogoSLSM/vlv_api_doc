swagger: '2.0'
info:
  description: This is the description for the VLV Admin API. This api allows for user management, role management, role to user assignment and account to user assigment
  version: 1.0.1
  title: VLV Admin API
  contact:
    email: francisco.j.prata@accenture.com
  x-targetEndpoint: 'https://www.vlv.com/security'
host: 'localhost:443'
basePath: /security/v1
schemes:
  - https
paths:
  /roles:
    post:
      tags:
        - role
      summary: Create role
      description: Create a new role in the security API
      operationId: createRole
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created role object
          required: true
          schema:
            $ref: '#/definitions/Role'    
      responses:
        default:
          description: successful operation

    get:
      tags:
        - role
      summary: manage roles
      operationId: getRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: query
          name: application
          description: get role applicable by application
          required: false
          type: string        
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '400':
          description: Invalid role supplied
        '404':
          description: Role not found
  
  '/roles/{id}':
    get:
      tags:
        - role
      summary: manage roles
      operationId: getRolesbyID
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: get role object by id
          required: true
          type: integer        
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: Invalid role supplied
        '404':
          description: Role not found
    put:
      tags:
        - role
      summary: Updated role
      description: Update role info.
      operationId: updateRole
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
        - in: body
          name: body
          description: Updated role object
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '400':
          description: Invalid id supplied
        '404':
          description: User not found
          
  '/roles/{id}/assignable_roles':
    get:
      tags:
        - role
      summary: if role has specific 'assign role' permisson, returns the list of roles he can assign
      operationId: getAssignableRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: get roles assignable by role
          required: true
          type: integer     
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '400':
          description: Invalid id supplied
        '404':
          description: Role not found
    post: 
      tags:
        - role
      summary: Add assignable role
      description: Create a new role in the security API
      operationId: createAssignableRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: Created assignable role object
          required: true
          type: integer
        - in: body
          name: body
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'    
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'

        default:
          description: successful operation
          
    delete: 
      tags:
        - role
      summary: remove assignable role
      description: remove role association from the security API
      operationId: deleteAssignableRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: deleted role object
          required: true
          type: integer
        - in: body
          name: body
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'    
      responses:
        default:
          description: successful operation

  /users:
    get:
      tags:
        - user
      summary: get user info
      description: get user by query
      operationId: getUserByQuery
      produces:
        - application/xml
        - application/json
      parameters:
        - in: query
          name: name
          description: get user object by user name
          required: false
          type: string
        - in: query
          name: email
          description: get user object by email
          required: false
          type: string
        - in: query
          name: reference date
          description: get users changed since date
          required: false
          type: string
          
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    post:
      tags:
        - user
      summary: Create user
      description: Create a new user in the security API
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'    
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      
        default:
          description: successful operation
  '/users/{uuid}':
    get:
      tags:
        - user
      summary: Get user by user uuid
      description: ''
      operationId: getUserByUUID
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: 'The uuid that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: uuid that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found

  '/users/{uuid}/roles/':
    delete:
      tags:
        - user_role
      summary: Remove roles from user
      description: Delete an array of roles from user
      operationId: deleteRoleUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: uuid
          description: uuid of the user
          required: true
          type: string 
        - in: body
          name: body
          description: Array of roles
          required: true
          schema:
            type: array
            items: 
              $ref: '#/definitions/Role'    
      responses:
        default:
          description: successful operation

    post:
      tags:
        - user_role
      summary: Assign roles to user
      description: Add an array of roles to the user (upsert)
      operationId: updateRoleUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: uuid
          description: uuid of the user
          required: true
          type: string 
        - in: body
          name: body
          description: Array of roles
          required: true
          schema:
            type: array
            items: 
              $ref: '#/definitions/Role'    
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Role'
        default:
          description: successful operation
        
    get:
      tags:
        - user_role
      summary: manage user role assignments
      operationId: getUserRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: uuid
          description: get role applicable by application
          required: true
          type: integer

      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '400':
          description: Invalid role supplied
        '404':
          description: Role not found

  '/users/{uuid}/assignable_roles/':
    get:
      tags:
        - user_role
      summary: retrieve assignable roles for user
      operationId: getAssignableUserRoles
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: uuid
          description: get roles that the user can assign
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '400':
          description: Invalid user supplied
        '404':
          description: user not found
    put:
      tags:
        - user_role
      summary: Updated user role assigment
      description: This can only be done by the logged in user.
      operationId: updateUserRole
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: uuid that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    delete:
      tags:
        - user_role
      summary: Delete user role assignment
      description: This can only be done by the logged in user.
      operationId: deleteUserRole
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
          
  '/users/{uuid}/accounts/':
    get:
      tags:
        - user_account
      summary: manage user account assignments
      operationId: getUserAccounts
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: uuid
          description: get accounts for user
          required: true
          type: integer      

      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    post:
      tags:
        - user_account
      summary: Updated user / account assignment (upsert)
      description: This can only be done by the logged in user.
      operationId: updateUserAccounts
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: uuid that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated account object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    delete:
      tags:
        - user_account
      summary: Delete user account assignment
      description: This can only be done by the logged in user.
      operationId: deleteUserAccounts
      produces:
        - application/xml
        - application/json
      parameters:
        - name: uuid
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
        - in: body
          name: body
          description: Updated account object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'

      responses:
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found

  
  '/accounts/{id}':
    get:
      tags:
        - account
      summary: get account info by id
      operationId: getAccountID
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: get accounts 
          required: true
          type: string

      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid id supplied
        '404':
          description: User not found

  /accounts:
    get:
      tags:
        - account
      summary:  get accounts that where changed since ..
      operationId: getAccountUpdates
      produces:
        - application/xml
        - application/json
      parameters:
        - in: query
          name: referencedate
          description: get accounts with lasthierarchydate changed since referencedate 
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '400':
          description: Invalid date supplied. Format (mm/dd/yyyy)
        '404':
          description: No accounts found
  
  '/accounts/{id}/users':
    get:
      tags:
        - account_user
      summary: get users from account 
      operationId: getUserForAccountID
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: get user for account 
          required: true
          type: string

      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Invalid id supplied
        '404':
          description: Account not found
    post:
      tags:
        - user_account
      summary: Updated user / account assignment (upsert)
      description: This can only be done by the logged in user.
      operationId: updateAccountsUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: uuid that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated account object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
      responses:
        '400':
          description: Invalid uuid supplied
        '404':
          description: User not found
    
  '/accounts/{id}/accounts':
    get:
      tags:
        - account
      summary: get accounts related to account (downstream)
      operationId: getAccountsForAccountID
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: id
          description: get accounts for account 
          required: true
          type: string
        - in: query
          name: shipto
          description: get only shipto accounts 
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Invalid id supplied
        '404':
          description: Account not found

        
definitions:
  User:
    type: object
    properties:
      uuid:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
      manager_uuid:
        type: string
      status:
        type: integer
      

  Role:
    type: object
    properties:
      id:
        type: integer
      application:
        type: string
      rolename:
        type: string
      status:
        type: integer
        
  Account:
    type: object
    properties:
      id:
        type: string
      salesorg:
        type: string
      distchannel:
        type: string
      division:
        type: string
      accoountnumber:
        type: string
      accounttype:
        type: string
      status:
        type: integer
        
          
externalDocs:
  description: Find out more about VLV
  url: 'http://www.vlv.com'
